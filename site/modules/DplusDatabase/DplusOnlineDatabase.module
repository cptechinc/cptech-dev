<?php namespace ProcessWire;

class DplusOnlineDatabase extends DplusDatabase implements ConfigurableModule {
	protected $connection_name = 'db_dpluso';
	protected $basename        = 'dpluso';


	/**
	 * Returns Config to connect to Dplus Data Database
	 * @return Config
	 */
	public function dbconfig() {
		$config = $this->wire('config');
		$dbname = '';

		if (!empty($this->db_name)){
			$this->db_name = $this->db_name;
		} else {
			$this->db_name = "dpluso$config->COMPANYNBR";
		}

		$dbconfig = new Config();
		$dbconfig->dbHost = !empty($this->db_host) ? $this->db_host : $config->dbHost;
		$dbconfig->dbName = $this->db_name;
		$dbconfig->dbUser = !empty($this->db_user) ? $this->db_user : $config->dbUser;
		$dbconfig->dbPass = !empty($this->db_pass) ? $this->db_pass : $config->dbPass;
		$dbconfig->dbPort = !empty($this->db_port) ? $this->db_port : $config->dbPort;

		return $dbconfig;
	}
/* =============================================================
	ProcessWire Module Functions
============================================================= */
	public static function getModuleInfo() {
		$infoArray = array(
			'title'    => __('Dplus Online Database Connection'),
			'version'  => 115,
			'summary'  => __("Creates Connection to Dplus Online Database"),
			'autoload' => true,
			'singular' => true,
			'author'   => 'pauldro',
			'icon'     => 'database',
			'requires' => array('DplusDatabase')
		);
		return $infoArray;
	}

	static public function getModuleConfigInputfields(array $data) {
		$modules = wire('modules');
		$config = wire('config');
		$fieldmaker = $modules->get('ModuleConfigFields');

		$fields = new InputfieldWrapper();
		$defaults = self::getDefaultConfig();
		$data = array_merge($defaults, $data);

		foreach (self::CONFIG_FIELDS as $name => $traits) {
			$f = $fieldmaker->inputfield($traits, $data[$name]);
			$fields->add($f);
		}
		return $fields;
	}
}
